<?xml version="1.0"?>
<!-- build command: ant build -->
<project name="Generic" default="." basedir=".">
    <description>Generic Firefox add-on build script</description>

    <property name="src" location="."/>
    <property name="build" location="build"/>
    <property name="dist" location="xpi"/>
    <mkdir dir="${dist}"/>
    <delete dir="${build}"/>

    <!-- determine version number, etc, based on install.rdf -->
    <target name="read-install.rdf">
        <xmlproperty file="${src}/install.rdf"/>
        <property name="file-base-name" value="${RDF.Description.em:id}"/>
        <property name="plain-version" value="${RDF.Description.em:version}"/>
        <buildnumber/>
        <property name="full-version" value="${RDF.Description.em:version}.${build.number}"/>
    </target>

    <target name="copy-build" depends="read-install.rdf">
        <mkdir dir="${build}"/>

        <copy todir="${build}">
            <fileset dir=".">
                <includesfile name="files-to-copy.txt"/>
            </fileset>
        </copy>
    </target>

    <target name="prepare-update" depends="copy-build">
        <property name="update-url-base" value="${RDF.Description.em:updateURL}"/>
        <property name="update-file-name" value="update-${file-base-name}.rdf"/>
        <property name="update-path" value="${dist}/${update-file-name}"/>
        <copy file="${src}/update.rdf" tofile="${update-path}" overwrite="true"/>
        <replace file="${update-path}" token="___EXTENSION_ID___" value="${RDF.Description.em:id}"/>
        <replace file="${update-path}" token="___VERSION___" value="${full-version}"/>
        <replace file="${update-path}" token="___APPID___" value="${RDF.Description.em:targetApplication.Description.em:id}"/>
        <replace file="${update-path}" token="___MINVERSION___" value="${RDF.Description.em:targetApplication.Description.em:minVersion}"/>
        <replace file="${update-path}" token="___MAXVERSION___" value="${RDF.Description.em:targetApplication.Description.em:maxVersion}"/>
        <replace file="${build}/install.rdf" token="${RDF.Description.em:updateURL}" value="${update-url-base}/${update-file-name}"/>
        <loadfile property="updateKeyString" srcFile="updateKey">
          <filterchain>
            <striplinebreaks/>
          </filterchain>
        </loadfile>
        <echo>updateKey: "${updateKeyString}"</echo>
        <replace file="${build}/install.rdf" token="${RDF.Description.em:updateKey}" value="${updateKeyString}"/>
    </target>

    <target name="clean-build" depends="copy-build">
        <echo>Stripping log() invocations</echo>
        <replaceregexp byline="true">
            <regexp pattern="\blog\(.+\)"/>
            <substitution expression=""/>
            <fileset dir="${build}">
                <include name="**/*.js"/>
            </fileset>
        </replaceregexp>

        <replace file="${build}/install.rdf" token="${RDF.Description.em:version}" value="${full-version}"/>
    </target>

    <!-- archive sources into .xpi file -->
    <target name="archive" depends="copy-build" description="archive the add-on">
        <property name="xpi-release-name" value="${file-base-name}-${full-version}.xpi"/>
        <property name="xpi-release" location="${dist}/${xpi-release-name}"/>
        <property name="xpi-plain" location="${dist}/${file-base-name}-${plain-version}.xpi"/>
        <zip destfile="${xpi-plain}" level="9">
            <fileset dir="${build}"/>
        </zip>
        <delete dir="${build}"/>
    </target>

<!-- build without stripping log() invocations -->
    <target name="build-debug" depends="archive"/>

<!-- main build action -->
    <target name="build" depends="clean-build, archive">
        <move file="${xpi-plain}" tofile="${xpi-release}" verbose="true"/>
    </target>

<!-- alias of "build" -->
    <target name="build-release" depends="build"/>

   <target name="reset-build-number">
       <propertyfile file="build.number">
          <entry  key="build.number" type="int" value="0"/>
       </propertyfile>
   </target>

    <target name="release-update" depends="prepare-update, build">
        <tempfile property="hash-file"/>
        <exec executable="sha256sum" output="${hash-file}">
            <arg value="${xpi-release}"/>
        </exec>
        <replaceregexp file="${hash-file}">
            <regexp pattern="\s+.*\n"/>
            <substitution expression=""/>
        </replaceregexp>
        <loadfile property="hash" srcFile="${hash-file}"/>
        <delete file="${hash-file}"/>
        <property name="hash-field" value="sha256:${hash}"/>
        <echo>${hash-field}</echo>
        <replace file="${update-path}" token="___XPI___" value="${update-url-base}/${xpi-release-name}"/>
        <replace file="${update-path}" token="___HASH___" value="${hash-field}"/>
    </target>

    <target name="release-upload" depends="release-update">
        <copy file="upload.command-template" tofile="upload.command" overwrite="true"/>
        <replace file="upload.command" token="___FILES___" value="${xpi-release} ${update-path}"/>
        <echo>${line.separator}Generated upload command file: upload.command</echo>
        <echo>Don't forget to sign the update manifest before uploading!</echo>
    </target>
</project>
